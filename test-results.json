{"numFailedTestSuites":13,"numFailedTests":13,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":13,"numTotalTests":13,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1555924215010,"success":false,"testResults":[{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should query for deities name, coolness, and creation date. Order the results first by creation date, then by decreasing coolness.\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 32 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-5/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:32:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924215996,"start":1555924215416},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-5/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":89,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-5/ex-1.test.js:32:63)"],"fullName":"exercise1 Should query for deities name, coolness, and creation date. Order the results first by creation date, then by decreasing coolness.","location":null,"numPassingAsserts":0,"status":"failed","title":"Should query for deities name, coolness, and creation date. Order the results first by creation date, then by decreasing coolness."}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should retrieve only the name and height for all the healthy dolphins sorted by their height (tallest to shortest)\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 29 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-6.test.js\u001b[39m\u001b[0m\u001b[2m:29:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216077,"start":1555924216008},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-6.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":24,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-6.test.js:29:63)"],"fullName":"exercise1 Should retrieve only the name and height for all the healthy dolphins sorted by their height (tallest to shortest)","location":null,"numPassingAsserts":0,"status":"failed","title":"Should retrieve only the name and height for all the healthy dolphins sorted by their height (tallest to shortest)"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should delete all dolphins that have a height less than 2 and are blue\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 29 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-3.test.js\u001b[39m\u001b[0m\u001b[2m:29:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216151,"start":1555924216082},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-3.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":24,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-3.test.js:29:63)"],"fullName":"exercise1 Should delete all dolphins that have a height less than 2 and are blue","location":null,"numPassingAsserts":0,"status":"failed","title":"Should delete all dolphins that have a height less than 2 and are blue"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should update Daron to have a height of 6\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 26 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-4.test.js\u001b[39m\u001b[0m\u001b[2m:26:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216222,"start":1555924216156},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-4.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":25,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-4.test.js:26:63)"],"fullName":"exercise1 Should update Daron to have a height of 6","location":null,"numPassingAsserts":0,"status":"failed","title":"Should update Daron to have a height of 6"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should find all dolphins with a height greater than 2\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 28 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:28:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216289,"start":1555924216227},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":23,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-1.test.js:28:63)"],"fullName":"exercise1 Should find all dolphins with a height greater than 2","location":null,"numPassingAsserts":0,"status":"failed","title":"Should find all dolphins with a height greater than 2"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should update every deity whose coolness level is above 10 to have a coolness level of 10\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 31 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-6/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:31:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216360,"start":1555924216294},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-6/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":22,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-6/ex-1.test.js:31:63)"],"fullName":"exercise1 Should update every deity whose coolness level is above 10 to have a coolness level of 10","location":null,"numPassingAsserts":0,"status":"failed","title":"Should update every deity whose coolness level is above 10 to have a coolness level of 10"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should update any the \"healthy\" column of any dolphin for any brown or green dolphin to FALSE\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 29 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-5.test.js\u001b[39m\u001b[0m\u001b[2m:29:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216429,"start":1555924216365},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-5.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":21,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-5.test.js:29:63)"],"fullName":"exercise1 Should update any the \"healthy\" column of any dolphin for any brown or green dolphin to FALSE","location":null,"numPassingAsserts":0,"status":"failed","title":"Should update any the \"healthy\" column of any dolphin for any brown or green dolphin to FALSE"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should select only the coolness level and names of your deities, instead of using an *\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 28 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-2/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:28:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216485,"start":1555924216434},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-2/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":18,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-2/ex-1.test.js:28:63)"],"fullName":"exercise1 Should select only the coolness level and names of your deities, instead of using an *","location":null,"numPassingAsserts":0,"status":"failed","title":"Should select only the coolness level and names of your deities, instead of using an *"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should remove any deity whose main power starts with the letter \"w\"\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 31 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-7/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:31:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216572,"start":1555924216490},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-7/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":44,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-7/ex-1.test.js:31:63)"],"fullName":"exercise1 Should remove any deity whose main power starts with the letter \"w\"","location":null,"numPassingAsserts":0,"status":"failed","title":"Should remove any deity whose main power starts with the letter \"w\""}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should find all dolphins that have \"on\" anywhere in their name\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 28 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:28:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216634,"start":1555924216578},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-2.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":21,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/exercises/ex-2.test.js:28:63)"],"fullName":"exercise1 Should find all dolphins that have \"on\" anywhere in their name","location":null,"numPassingAsserts":0,"status":"failed","title":"Should find all dolphins that have \"on\" anywhere in their name"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should insert data about the Deity Felurian. Her mythology is Faen, her power is Persuasion, she has no coolness level, and her creation date is 0\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m    let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 25 | \u001b[39m    expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                          \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m    studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m    let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-1/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:25:59)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216690,"start":1555924216639},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-1/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":17,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-1/ex-1.test.js:25:59)"],"fullName":"exercise1 Should insert data about the Deity Felurian. Her mythology is Faen, her power is Persuasion, she has no coolness level, and her creation date is 0","location":null,"numPassingAsserts":0,"status":"failed","title":"Should insert data about the Deity Felurian. Her mythology is Faen, her power is Persuasion, she has no coolness level, and her creation date is 0"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should query for the deities who are both from Greek mythology AND with a coolness level greater than 8\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 32 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-3/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:32:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216754,"start":1555924216695},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-3/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":24,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-3/ex-1.test.js:32:63)"],"fullName":"exercise1 Should query for the deities who are both from Greek mythology AND with a coolness level greater than 8","location":null,"numPassingAsserts":0,"status":"failed","title":"Should query for the deities who are both from Greek mythology AND with a coolness level greater than 8"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Should query for deities that have \"eh\" somewhere in their name\u001b[39m\u001b[22m\n\n    Custom message:\n      Seems you've submitted an empty file\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        let studentQuery \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetStudentQuery()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 32 | \u001b[39m        expect(studentQuery\u001b[33m.\u001b[39merror\u001b[33m,\u001b[39m studentQuery\u001b[33m.\u001b[39merrorMessage)\u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m        \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m        studentQuery \u001b[33m=\u001b[39m studentQuery\u001b[33m.\u001b[39mquery\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m        let result \u001b[33m=\u001b[39m await testUtils\u001b[33m.\u001b[39mgetQueryResult(isSelect\u001b[33m,\u001b[39m studentQuery)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-4/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:32:63)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1555924216810,"start":1555924216758},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-4/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":20,"failureMessages":["Error: Custom message:\n  Seems you've submitted an empty file\n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBeFalsy(\u001b[22m\u001b[2m)\u001b[22m\n\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-intro-lesson-exercises/tests/spot-check-4/ex-1.test.js:32:63)"],"fullName":"exercise1 Should query for deities that have \"eh\" somewhere in their name","location":null,"numPassingAsserts":0,"status":"failed","title":"Should query for deities that have \"eh\" somewhere in their name"}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}